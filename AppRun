#!/bin/sh
HERE=$(dirname "$(readlink -f "$0")")

# Set up library and plugin paths
# Explicitly add the directory containing PyInstaller's bundled Python library
export LD_LIBRARY_PATH="$HERE/usr/bin/_internal:$HERE/usr/lib:$HERE/usr/bin:$LD_LIBRARY_PATH"

export QT_PLUGIN_PATH="$HERE/usr/bin/PyQt6/Qt6/plugins:$HERE/usr/bin/plugins:$QT_PLUGIN_PATH"
export QT_QPA_PLATFORM_PLUGIN_PATH="$HERE/usr/bin/PyQt6/Qt6/plugins/platforms"
export QML2_IMPORT_PATH="$HERE/usr/bin/PyQt6/Qt6/qml:$QML2_IMPORT_PATH"

# Optional: Add any other environment variable setups needed by your app
# For example, to help find fonts if they are bundled:
# export XDG_DATA_DIRS="$HERE/usr/share:$XDG_DATA_DIRS"
# export FONTCONFIG_PATH="$HERE/usr/etc/fonts"
# export FONTCONFIG_FILE="fonts.conf" # if you bundle a fonts.conf

# Debugging: Echo paths (uncomment if needed)
# echo "AppRun Debug: HERE is $HERE"
# echo "AppRun Debug: LD_LIBRARY_PATH is $LD_LIBRARY_PATH"
# echo "AppRun Debug: QT_PLUGIN_PATH is $QT_PLUGIN_PATH"
# echo "AppRun Debug: QT_QPA_PLATFORM_PLUGIN_PATH is $QT_QPA_PLATFORM_PLUGIN_PATH"
# Check if libpython exists at the expected path
# if [ -f "$HERE/usr/bin/_internal/libpython3.12.so" ]; then
#   echo "AppRun Debug: libpython3.12.so found at $HERE/usr/bin/_internal/libpython3.12.so"
# else
#   echo "AppRun Debug: libpython3.12.so NOT found at $HERE/usr/bin/_internal/libpython3.12.so"
#   echo "AppRun Debug: Listing $HERE/usr/bin/_internal contents:"
#   ls -la "$HERE/usr/bin/_internal"
# fi

# Change to the directory where the executable is located.
cd "$HERE/usr/bin" || exit 1

# Execute the main application binary.
exec "./main" "$@" 